/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  MockRandamuVRF,
  MockRandamuVRFInterface,
} from "../../contracts/MockRandamuVRF";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
    ],
    name: "RandomnessFulfilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "seed",
        type: "uint256",
      },
    ],
    name: "RandomnessRequested",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
    ],
    name: "fulfillRandomness",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    name: "getRandomness",
    outputs: [
      {
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    name: "isRequestFulfilled",
    outputs: [
      {
        internalType: "bool",
        name: "fulfilled",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "randomnessValues",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "requestFulfilled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "seed",
        type: "uint256",
      },
    ],
    name: "requestRandomness",
    outputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    name: "resetRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657610368908161001c8239f35b600080fdfe6080604081815260048036101561001557600080fd5b600092833560e01c9081630695a252146102ce57508063453f4f6214610254578381635170c5f81461021f5750806368064c64146101f45780637363ae1f146100c75780638d2a1889146100a05763ad44777b1461007257600080fd5b3461009c57602036600319011261009c578160209360ff9235815280855220541690519015158152f35b8280fd5b503461009c57602036600319011261009c5760209282913581526001845220549051908152f35b509190346101f0576020928360031936011261009c578035928251938585019242845281858701523360601b606087015260548652608086019067ffffffffffffffff94878310868411176101dd5761012090838852885190209784897f3d94fecedaa4f90b8bd459797adb95f5bb11426025c5541390d9ccc1ad1b60a18880a360a081019485524260c08201524460e08201524160601b6101008201526074845201948511828610176101ca575092847f546aca7b2683440b8f02fa95faeb8efc79dd0f16af3d815a002742ea6f76116c9388938896848452519020918187849352808652818120600160ff198254161790556001865220558152a251908152f35b634e487b7160e01b845260419052602483fd5b634e487b7160e01b855260418252602485fd5b5080fd5b503461009c57602036600319011261009c578160209360ff9235815280855220541690519015158152f35b80848434610250576020366003190112610250573582528160205280822060ff198154169055600160205281205580f35b5050fd5b508290346101f05760203660031901126101f0578035908183528260205260ff8484205416156102935760208480858581526001845220549051908152f35b606490602085519162461bcd60e51b8352820152601560248201527414995c5d595cdd081b9bdd08199d5b199a5b1b1959605a1b6044820152fd5b9190503461032e578260031936011261032e577f546aca7b2683440b8f02fa95faeb8efc79dd0f16af3d815a002742ea6f76116c9160209135936024358091868852878552808820600160ff19825416179055600185528720558152a280f35b8380fdfea26469706673582212207e219a857ced6856d5ee53ae0f2671115af5451578e1cf11b170fa33d00afd8e64736f6c63430008180033";

type MockRandamuVRFConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockRandamuVRFConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockRandamuVRF__factory extends ContractFactory {
  constructor(...args: MockRandamuVRFConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockRandamuVRF & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockRandamuVRF__factory {
    return super.connect(runner) as MockRandamuVRF__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockRandamuVRFInterface {
    return new Interface(_abi) as MockRandamuVRFInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MockRandamuVRF {
    return new Contract(address, _abi, runner) as unknown as MockRandamuVRF;
  }
}
