/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IRandamuVRF,
  IRandamuVRFInterface,
} from "../../../contracts/interfaces/IRandamuVRF";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    name: "getRandomness",
    outputs: [
      {
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    name: "isRequestFulfilled",
    outputs: [
      {
        internalType: "bool",
        name: "fulfilled",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "seed",
        type: "uint256",
      },
    ],
    name: "requestRandomness",
    outputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IRandamuVRF__factory {
  static readonly abi = _abi;
  static createInterface(): IRandamuVRFInterface {
    return new Interface(_abi) as IRandamuVRFInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IRandamuVRF {
    return new Contract(address, _abi, runner) as unknown as IRandamuVRF;
  }
}
