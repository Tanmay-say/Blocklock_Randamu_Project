/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { TestNFT, TestNFTInterface } from "../../contracts/TestNFT";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60803462000397576040906001600160401b038183018181118382101762000381578352600782526020916615195cdd13919560ca1b838201528351918483018381108282111762000381578552600492838152631513919560e21b858201528251908282116200036c576000958654926001958685811c9516801562000361575b838610146200034e578190601f95868111620002fb575b50839086831160011462000297578a926200028b575b5050600019600383901b1c191690861b1787555b8151938411620002785784548581811c911680156200026d575b828210146200025a57908184869594931162000203575b50809284116001146200019b575086926200018f575b5050600019600383901b1c191690821b1790555b33156200017a575060068054336001600160a01b0319821681179092559251926001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a3600755610ff190816200039d8239f35b9151631e4fbdf760e01b815291820152602490fd5b01519050388062000109565b9190859450601f1984168589528389209389905b828210620001e95750508411620001cf575b505050811b0190556200011d565b015160001960f88460031b161c19169055388080620001c1565b8484015186558897909501949384019390810190620001af565b90919293508588528188208480870160051c82019284881062000250575b9187968992969594930160051c01915b82811062000241575050620000f3565b8a815587965088910162000231565b9250819262000221565b634e487b7160e01b885260228752602488fd5b90607f1690620000dc565b634e487b7160e01b875260418652602487fd5b015190503880620000ae565b8a8052848b208994509190601f1984168c5b87828210620002e45750508411620002ca575b505050811b018755620000c2565b015160001960f88460031b161c19169055388080620002bc565b8385015186558c97909501949384019301620002a9565b909150898052838a208680850160051c82019286861062000344575b918a91869594930160051c01915b8281106200033557505062000098565b8c81558594508a910162000325565b9250819262000317565b634e487b7160e01b895260228852602489fd5b94607f169462000081565b604185634e487b7160e01b6000525260246000fd5b634e487b7160e01b600052604160045260246000fd5b600080fdfe6080604081815260048036101561001557600080fd5b600092833560e01c90816301ffc9a714610a895750806306fdde03146109d8578063081812fc1461099d578063095ea7b3146108c157806323b872dd146108a957806342842e0e1461085a5780636352211e1461082957806370a08231146107d4578063715018a6146107775780638da5cb5b1461074e57806395d89b411461066f578063a22cb465146105d2578063b88d4fde1461056a578063c87b56dd14610431578063d0def521146101c2578063e985e9c5146101705763f2fde38b146100de57600080fd5b3461016c57602036600319011261016c576100f7610b35565b90610100610f8f565b6001600160a01b03918216928315610156575050600654826bffffffffffffffffffffffff60a01b821617600655167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8280fd5b5050346101be57806003193601126101be5760ff81602093610190610b35565b610198610b50565b6001600160a01b0391821683526005875283832091168252855220549151911615158152f35b5080fd5b509190346101be57806003193601126101be576101dd610b35565b92602467ffffffffffffffff813581811161042d573660238201121561042d5761020f90369084818701359101610bef565b600754956000199182881461041b5760018881016007556001600160a01b03998a16999095908a15610406578984528960209b8c92600284528b87205416600281151594856103d5575b838952600381528d892080548d019055848952528b872080546001600160a01b031916831790557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8780a46103c15788835260088a528783209682519586116103b05750506102c88654610c26565b601f811161036a575b508891601f851160011461030a57918495918593956102ff575b50501b9260031b1c19161790555b51908152f35b0151935038806102eb565b92919084601f1981168886528b8620955b8c89838310610353575050501061033b575b50505050811b0190556102f9565b01519060f88460031b161c191690553880808061032d565b86860151895590970196948501948893500161031b565b868352898320601f860160051c8101918b87106103a6575b601f0160051c019086905b82811061039b5750506102d1565b84815501869061038d565b9091508190610382565b634e487b7160e01b84526041905282fd5b87516339e3563760e11b8152808801849052fd5b600085815260046020526040902080546001600160a01b0319169055828952600381528d89208a8154019055610259565b508751633250574960e11b8152808801849052fd5b634e487b7160e01b8252601186528482fd5b8580fd5b50903461016c576020918260031936011261056657803580855260028452828520549091906001600160a01b03161561052c575083526008825280832081519384918181549061048082610c26565b92838652600192886001821691826000146105025750506001146104c4575b85886104c0896104b1848a0385610b9b565b51928284938452830190610af5565b0390f35b87945081939291528383205b8284106104ea57505050820101816104b16104c03861049f565b8054848a0186015288955087949093019281016104d0565b60ff19168882015294151560051b870190940194508593506104b192506104c0915038905061049f565b825162461bcd60e51b81529081018490526014602482015273151bdad95b88191bd95cc81b9bdd08195e1a5cdd60621b6044820152606490fd5b8380fd5b8382346101be5760803660031901126101be57610585610b35565b61058d610b50565b9060643567ffffffffffffffff81116105ce57366023820112156105ce576105cb938160246105c193369301359101610bef565b9160443591610dff565b80f35b8480fd5b50903461016c578060031936011261016c576105ec610b35565b90602435918215158093036105ce576001600160a01b031692831561065a5750338452600560205280842083855260205280842060ff1981541660ff8416179055519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a380f35b836024925191630b61174360e31b8352820152fd5b82843461074b578060031936011261074b5781519182826001936001549461069686610c26565b91828552602096876001821691826000146107245750506001146106c8575b5050506104c092916104b1910385610b9b565b9190869350600183527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b82841061070c57505050820101816104b16104c06106b5565b8054848a0186015288955087949093019281016106f3565b60ff19168782015293151560051b860190930193508492506104b191506104c090506106b5565b80fd5b5050346101be57816003193601126101be5760065490516001600160a01b039091168152602090f35b833461074b578060031936011261074b57610790610f8f565b600680546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50913461074b57602036600319011261074b576001600160a01b036107f7610b35565b169283156108145750806020938392526003845220549051908152f35b91516322718ad960e21b815291820152602490fd5b50913461074b57602036600319011261074b575061084960209235610f54565b90516001600160a01b039091168152f35b509190346101be5761086b36610b66565b91835193602085019085821067ffffffffffffffff831117610896576105cb96975052858452610dff565b634e487b7160e01b875260418852602487fd5b833461074b576105cb6108bb36610b66565b91610c60565b50903461016c578060031936011261016c576108db610b35565b916024356108e881610f54565b3315158061098a575b80610961575b61094b576001600160a01b039485169482918691167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258880a48452602052822080546001600160a01b031916909117905580f35b835163a9fbf51f60e01b81523381850152602490fd5b506001600160a01b03811686526005602090815284872033885290528386205460ff16156108f7565b506001600160a01b0381163314156108f1565b503461016c57602036600319011261016c579182602093356109be81610f54565b50825283528190205490516001600160a01b039091168152f35b82843461074b578060031936011261074b57815191828283546109fa81610c26565b9081845260209560019187600182169182600014610724575050600114610a2e575050506104c092916104b1910385610b9b565b91908693508280527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b828410610a7157505050820101816104b16104c06106b5565b8054848a018601528895508794909301928101610a58565b9250503461016c57602036600319011261016c573563ffffffff60e01b811680910361016c57602092506380ac58cd60e01b8114908115610ae4575b8115610ad3575b5015158152f35b6301ffc9a760e01b14905038610acc565b635b5e139f60e01b81149150610ac5565b919082519283825260005b848110610b21575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610b00565b600435906001600160a01b0382168203610b4b57565b600080fd5b602435906001600160a01b0382168203610b4b57565b6060906003190112610b4b576001600160a01b03906004358281168103610b4b57916024359081168103610b4b579060443590565b90601f8019910116810190811067ffffffffffffffff821117610bbd57604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff8111610bbd57601f01601f191660200190565b929192610bfb82610bd3565b91610c096040519384610b9b565b829481845281830111610b4b578281602093846000960137010152565b90600182811c92168015610c56575b6020831014610c4057565b634e487b7160e01b600052602260045260246000fd5b91607f1691610c35565b6001600160a01b039182169290918315610de657600092828452826020956002875260409684888820541696879133151580610d50575b509060027fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9284610d1d575b858352600381528b8320805460010190558683525289812080546001600160a01b0319168517905580a41692838303610cfc5750505050565b6064945051926364283d7b60e01b8452600484015260248301526044820152fd5b600087815260046020526040902080546001600160a01b0319169055848352600381528b83208054600019019055610cc3565b91939450915080610da5575b15610d6c57859291879138610c97565b878688610d89576024915190637e27328960e01b82526004820152fd5b604491519063177e802f60e01b82523360048301526024820152fd5b503387148015610dca575b80610d5c5750858252600481523385898420541614610d5c565b5086825260058152878220338352815260ff8883205416610db0565b604051633250574960e11b815260006004820152602490fd5b929092610e0d838583610c60565b833b610e1a575b50505050565b604051630a85bd0160e11b8082523360048301526001600160a01b0392831660248301526044820194909452608060648201529493169260209290918590610e66906084830190610af5565b039483816000978189895af1869181610f10575b50610edb575050503d600014610ed2573d610e9481610bd3565b90610ea26040519283610b9b565b81528093823d92013e5b82519283610ecd57604051633250574960e11b815260048101849052602490fd5b019050fd5b60609250610eac565b919450915063ffffffff60e01b1603610ef8575038808080610e14565b60249060405190633250574960e11b82526004820152fd5b9091508481813d8311610f4d575b610f288183610b9b565b81010312610f4957516001600160e01b031981168103610f49579038610e7a565b8680fd5b503d610f1e565b6000818152600260205260409020546001600160a01b0316908115610f77575090565b60249060405190637e27328960e01b82526004820152fd5b6006546001600160a01b03163303610fa357565b60405163118cdaa760e01b8152336004820152602490fdfea2646970667358221220076d63fd9b60fbd98b174d48b018a925ad0904fe2dff929900f04ba6e21de43d64736f6c63430008180033";

type TestNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestNFT__factory extends ContractFactory {
  constructor(...args: TestNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TestNFT & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TestNFT__factory {
    return super.connect(runner) as TestNFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestNFTInterface {
    return new Interface(_abi) as TestNFTInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): TestNFT {
    return new Contract(address, _abi, runner) as unknown as TestNFT;
  }
}
