/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { TestNFT, TestNFTInterface } from "../../contracts/TestNFT";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60803462000312576001600160401b039060409080820183811182821017620002fc578252600781526020906615195cdd13919560ca1b8282015282519383850185811082821117620002fc57845260048552631513919560e21b838601528151818111620002fc576000938454916001948584811c94168015620002f1575b83851014620002dd578190601f948581116200028a575b508390858311600114620002265788926200021a575b5050600019600383901b1c191690851b1785555b8651928311620002065783548481811c91168015620001fb575b82821014620001e7578281116200019f575b5080918311600114620001385750839495829394926200012c575b5050600019600383901b1c191690821b1790555b60065551610e919081620003188239f35b01519050388062000107565b90601f198316968486528286209286905b898210620001875750508385969798106200016d575b505050811b0190556200011b565b015160001960f88460031b161c191690553880806200015f565b80878596829496860151815501950193019062000149565b8486528186208380860160051c820192848710620001dd575b0160051c019085905b828110620001d1575050620000ec565b878155018590620001c1565b92508192620001b8565b634e487b7160e01b86526022600452602486fd5b90607f1690620000da565b634e487b7160e01b85526041600452602485fd5b015190503880620000ac565b8880528489208894509190601f1984168a5b8782821062000273575050841162000259575b505050811b018555620000c0565b015160001960f88460031b161c191690553880806200024b565b8385015186558b9790950194938401930162000238565b9091508780528388208580850160051c820192868610620002d3575b918991869594930160051c01915b828110620002c457505062000096565b8a8155859450899101620002b4565b92508192620002a6565b634e487b7160e01b87526022600452602487fd5b93607f16936200007f565b634e487b7160e01b600052604160045260246000fd5b600080fdfe608060408181526004918236101561001657600080fd5b600092833560e01c91826301ffc9a7146109565750816306fdde03146108a5578163081812fc14610869578163095ea7b31461078c57816323b872dd1461077457816342842e0e146107265781636352211e146106f557816370a08231146106a057816395d89b41146105c1578163a22cb46514610523578163b88d4fde146104bb578163c87b56dd1461037d578163d0def5211461010f575063e985e9c5146100bf57600080fd5b3461010b578060031936011261010b5760ff816020936100dd610a01565b6100e5610a1c565b6001600160a01b0391821683526005875283832091168252855220549151911615158152f35b5080fd5b83833461010b578060031936011261010b57610129610a01565b92602467ffffffffffffffff813581811161037957366023820112156103795761015b90369084818701359101610abb565b60065495600019918288146103675760018881016006556001600160a01b03998a16999095908a15610352578984528960209b8c92600284528b8720541660028115159485610321575b838952600381528d892080548d019055848952528b872080546001600160a01b031916831790557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8780a461030d5788835260078a528783209682519586116102fc5750506102148654610af2565b601f81116102b6575b508891601f8511600114610256579184959185939561024b575b50501b9260031b1c19161790555b51908152f35b015193508980610237565b92919084601f1981168886528b8620955b8c8983831061029f5750505010610287575b50505050811b019055610245565b01519060f88460031b161c1916905586808080610279565b868601518955909701969485019488935001610267565b868352898320601f860160051c8101918b87106102f2575b601f0160051c019086905b8281106102e757505061021d565b8481550186906102d9565b90915081906102ce565b634e487b7160e01b84526041905282fd5b87516339e3563760e11b8152808801849052fd5b600085815260046020526040902080546001600160a01b0319169055828952600381528d89208a81540190556101a5565b508751633250574960e11b8152808801849052fd5b634e487b7160e01b8252601186528482fd5b8580fd5b919050346104b757602091826003193601126104b357803580855260028452828520549091906001600160a01b03161561047957508352600782528083208151938491818154906103cd82610af2565b928386526001928860018216918260001461044f575050600114610411575b858861040d896103fe848a0385610a67565b519282849384528301906109c1565b0390f35b87945081939291528383205b82841061043757505050820101816103fe61040d386103ec565b8054848a01860152889550879490930192810161041d565b60ff19168882015294151560051b870190940194508593506103fe925061040d91503890506103ec565b825162461bcd60e51b81529081018490526014602482015273151bdad95b88191bd95cc81b9bdd08195e1a5cdd60621b6044820152606490fd5b8380fd5b8280fd5b83903461010b57608036600319011261010b576104d6610a01565b6104de610a1c565b9060643567ffffffffffffffff811161051f573660238201121561051f5761051c9381602461051293369301359101610abb565b9160443591610ccb565b80f35b8480fd5b919050346104b757806003193601126104b75761053e610a01565b906024359182151580930361051f576001600160a01b03169283156105ac5750338452600560205280842083855260205280842060ff1981541660ff8416179055519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a380f35b836024925191630b61174360e31b8352820152fd5b82843461069d578060031936011261069d578151918282600193600154946105e886610af2565b918285526020968760018216918260001461067657505060011461061a575b50505061040d92916103fe910385610a67565b9190869350600183527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b82841061065e57505050820101816103fe61040d610607565b8054848a018601528895508794909301928101610645565b60ff19168782015293151560051b860190930193508492506103fe915061040d9050610607565b80fd5b82843461069d57602036600319011261069d576001600160a01b036106c3610a01565b169283156106e05750806020938392526003845220549051908152f35b91516322718ad960e21b815291820152602490fd5b82843461069d57602036600319011261069d575061071560209235610e20565b90516001600160a01b039091168152f35b83833461010b5761073636610a32565b91835193602085019085821067ffffffffffffffff8311176107615761051c96975052858452610ccb565b634e487b7160e01b875260418852602487fd5b833461069d5761051c61078636610a32565b91610b2c565b919050346104b757806003193601126104b7576107a7610a01565b916024356107b481610e20565b33151580610856575b8061082d575b610817576001600160a01b039485169482918691167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258880a48452602052822080546001600160a01b031916909117905580f35b835163a9fbf51f60e01b81523381850152602490fd5b506001600160a01b03811686526005602090815284872033885290528386205460ff16156107c3565b506001600160a01b0381163314156107bd565b9050346104b75760203660031901126104b75791826020933561088b81610e20565b50825283528190205490516001600160a01b039091168152f35b82843461069d578060031936011261069d57815191828283546108c781610af2565b90818452602095600191876001821691826000146106765750506001146108fb5750505061040d92916103fe910385610a67565b91908693508280527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b82841061093e57505050820101816103fe61040d610607565b8054848a018601528895508794909301928101610925565b8491346104b75760203660031901126104b7573563ffffffff60e01b81168091036104b757602092506380ac58cd60e01b81149081156109b0575b811561099f575b5015158152f35b6301ffc9a760e01b14905083610998565b635b5e139f60e01b81149150610991565b919082519283825260005b8481106109ed575050826000602080949584010152601f8019910116010190565b6020818301810151848301820152016109cc565b600435906001600160a01b0382168203610a1757565b600080fd5b602435906001600160a01b0382168203610a1757565b6060906003190112610a17576001600160a01b03906004358281168103610a1757916024359081168103610a17579060443590565b90601f8019910116810190811067ffffffffffffffff821117610a8957604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff8111610a8957601f01601f191660200190565b929192610ac782610a9f565b91610ad56040519384610a67565b829481845281830111610a17578281602093846000960137010152565b90600182811c92168015610b22575b6020831014610b0c57565b634e487b7160e01b600052602260045260246000fd5b91607f1691610b01565b6001600160a01b039182169290918315610cb257600092828452826020956002875260409684888820541696879133151580610c1c575b509060027fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9284610be9575b858352600381528b8320805460010190558683525289812080546001600160a01b0319168517905580a41692838303610bc85750505050565b6064945051926364283d7b60e01b8452600484015260248301526044820152fd5b600087815260046020526040902080546001600160a01b0319169055848352600381528b83208054600019019055610b8f565b91939450915080610c71575b15610c3857859291879138610b63565b878688610c55576024915190637e27328960e01b82526004820152fd5b604491519063177e802f60e01b82523360048301526024820152fd5b503387148015610c96575b80610c285750858252600481523385898420541614610c28565b5086825260058152878220338352815260ff8883205416610c7c565b604051633250574960e11b815260006004820152602490fd5b929092610cd9838583610b2c565b833b610ce6575b50505050565b604051630a85bd0160e11b8082523360048301526001600160a01b0392831660248301526044820194909452608060648201529493169260209290918590610d329060848301906109c1565b039483816000978189895af1869181610ddc575b50610da7575050503d600014610d9e573d610d6081610a9f565b90610d6e6040519283610a67565b81528093823d92013e5b82519283610d9957604051633250574960e11b815260048101849052602490fd5b019050fd5b60609250610d78565b919450915063ffffffff60e01b1603610dc4575038808080610ce0565b60249060405190633250574960e11b82526004820152fd5b9091508481813d8311610e19575b610df48183610a67565b81010312610e1557516001600160e01b031981168103610e15579038610d46565b8680fd5b503d610dea565b6000818152600260205260409020546001600160a01b0316908115610e43575090565b60249060405190637e27328960e01b82526004820152fdfea26469706673582212201fe2e66f8c837c4305c39bf786a33245ff9c85ad235d1837d265c4fb7b6c7bee64736f6c63430008180033";

type TestNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestNFT__factory extends ContractFactory {
  constructor(...args: TestNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TestNFT & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TestNFT__factory {
    return super.connect(runner) as TestNFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestNFTInterface {
    return new Interface(_abi) as TestNFTInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): TestNFT {
    return new Contract(address, _abi, runner) as unknown as TestNFT;
  }
}
